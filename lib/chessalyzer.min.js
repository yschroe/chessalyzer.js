!function webpackUniversalModuleDefinition(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("chessalyzer",[],t):"object"==typeof exports?exports.chessalyzer=t():e.chessalyzer=t()}(global,(function(){return(()=>{"use strict";var e={n:t=>{var s=t&&t.__esModule?()=>t.default:()=>t;return e.d(s,{a:s}),s},d:(t,s)=>{for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Chessalyzer:()=>Chessalyzer,Tracker:()=>T});const s=require("perf_hooks"),i=require("fs"),r=require("chalk");var o=e.n(r);const a=require("readline"),n=require("events");var l=e.n(n);const c=require("cluster");var h=e.n(c);const p=["Pa","Pb","Pc","Pd","Pe","Pf","Pg","Ph"],d=["Ra","Nb","Bc","Qd","Ke","Bf","Ng","Rh"];class PiecePositionTable{constructor(){this.posMap={w:{R:{Ra:[7,0],Rh:[7,7]},N:{Nb:[7,1],Ng:[7,6]},B:{Bc:[7,2],Bf:[7,5]},Q:{Qd:[7,3]},K:{Ke:[7,4]}},b:{R:{Ra:[0,0],Rh:[0,7]},N:{Nb:[0,1],Ng:[0,6]},B:{Bc:[0,2],Bf:[0,5]},Q:{Qd:[0,3]},K:{Ke:[0,4]}}}}takes(e,t){t.includes("P")||delete this.posMap[e][t.substring(0,1)][t]}moves(e,t,s){t.includes("P")||(this.posMap[e][t.substring(0,1)][t]=s)}promotes(e,t,s){t.includes("P")||(this.posMap[e][t.substring(0,1)][t]=s)}}class ChessPiece{constructor(e,t){this.name=e,this.color=t}}const u=class ChessBoard{constructor(){this.tiles=new Array(8);for(let e=0;e<8;e+=1){const t=new Array(8);for(let s=0;s<8;s+=1){t[s]=null;const i=0===e||1===e?"b":"w";0===e||7===e?t[s]=new ChessPiece(d[s],i):1!==e&&6!==e||(t[s]=new ChessPiece(p[s],i))}this.tiles[e]=t}this.defaultTiles=this.tiles.map((e=>e.slice())),this.pieces=new PiecePositionTable,this.promoteCounter=0}move(e){const{from:t}=e,{to:s}=e;if(e.castles)this.castle(e.castles,e.player);else if(-1!==t[0]&&(e.takes.pos&&(this.pieces.takes("w"===e.player?"b":"w",e.takes.piece),this.tiles[e.takes.pos[0]][e.takes.pos[1]]=null),this.pieces.moves(e.player,e.piece,s),this.tiles[s[0]][s[1]]=this.tiles[t[0]][t[1]],this.tiles[t[0]][t[1]]=null,e.promotesTo)){const t=`${e.promotesTo}${this.promoteCounter}`;this.tiles[s[0]][s[1]]=new ChessPiece(t,e.player),this.pieces.promotes(e.player,t,s),this.promoteCounter+=1}}castle(e,t){const s="w"===t?7:0;let i=6,r=7,o=5;"O-O-O"===e&&(i=2,o=3,r=0),this.pieces.moves(t,"Ke",[s,i]),this.tiles[s][i]=this.tiles[s][4],this.tiles[s][4]=null,this.pieces.moves(t,this.tiles[s][r].name,[s,o]),this.tiles[s][o]=this.tiles[s][r],this.tiles[s][r]=null}reset(){this.tiles=this.defaultTiles.map((e=>e.slice())),this.pieces=new PiecePositionTable,this.promoteCounter=0}printPosition(){for(let e=0;e<8;e+=1){for(let t=0;t<8;t+=1){const s=this.tiles[e][t];null!==s?process.stdout.write(`|${s.color}${s.name}|`):process.stdout.write("|...|")}process.stdout.write("\n")}}},m="abcdefgh";class MoveData{constructor(){this.san="",this.player="",this.piece="",this.castles="",this.takes={},this.promotesTo="",this.from=[-1,-1],this.to=[-1,-1]}}class GameProcessor extends(l()){constructor(){super(),this.board=new u,this.currentMove=new MoveData,this.activePlayer=0,this.cntMoves=0,this.cntGames=0,this.gameAnalyzers=[],this.moveAnalyzers=[]}static checkConfig(e){const t={};return t.hasFilter=Object.prototype.hasOwnProperty.call(e,"filter"),t.filter=t.hasFilter?e.filter:()=>!0,t.cntGames=Object.prototype.hasOwnProperty.call(e,"cntGames")?e.cntGames:1/0,t}attachAnalyzers(e){e.forEach((e=>{"move"===e.type?this.moveAnalyzers.push(e):"game"===e.type&&this.gameAnalyzers.push(e)}))}static async processPGNMultiCore(e,t,s,r,o){try{let n=0;const c=[],p=[],d=[],u=[];let m=0,f=0,b=!1,w="";const g=new(l());function forkWorker(e){const t=h().fork();t.send({games:e,customPath:w,analyzerNames:d,analyzerConfigs:u}),t.on("message",(e=>{for(let t=0;t<c.length;t+=1)c[t].add(e.gameAnalyzers[t]);for(let t=0;t<p.length;t+=1)p[t].add(e.moveAnalyzers[t]);f+=e.cntMoves,t.kill(),0===Object.keys(h().workers).length&&b&&g.emit("finished")}))}h().setupMaster({exec:`${__dirname}/worker.min.js`}),s.forEach((e=>{"game"===e.type?(n+=1,c.push(e)):"move"===e.type&&p.push(e),d.push(e.constructor.name),u.push(e.cfg),Object.prototype.hasOwnProperty.call(e,"path")&&(w=e.path)}));const v=GameProcessor.checkConfig(t);let O=[],y={};const M=(0,a.createInterface)({input:(0,i.createReadStream)(e),crlfDelay:1/0});if(M.on("line",(e=>{if(e.startsWith("[")&&(v.hasFilter||n>0)){const t=e.match(/\[(.*?)\s/)[1],s=e.match(/"(.*?)"/)[1];y[t]=s}else if(e.startsWith("1")){if(y.moves=e.replace(/\{(.*?)\}\s/g,"").replace(/\d+\.+\s/g,"").replace(" *","").split(" "),(v.filter(y)||!v.hasFilter)&&(m+=1,O.push(y),m%(r*o)==0)){for(let e=0;e<o;e+=1)forkWorker(O.slice(e*r,e*r+r));O=[]}y={}}m>=v.cntGames&&(M.close(),M.removeAllListeners())})),await l().once(M,"close"),O.length>0)if(O.length>r){const e=Math.ceil(O.length/r);for(let t=0;t<e;t+=1)forkWorker(O.slice(t*r,t*r+r))}else forkWorker(O);return b=!0,await l().once(g,"finished"),s.forEach((e=>{e.finish&&e.finish()})),{cntGames:m,cntMoves:f}}catch(e){return console.log(e),{cntGames:-1,cntMoves:-1}}}async processPGN(e,t,s,r){try{const o=GameProcessor.checkConfig(t);this.attachAnalyzers(s);const n=this.gameAnalyzers.length,c=(0,a.createInterface)({input:(0,i.createReadStream)(e),crlfDelay:1/0});let h={};return c.on("line",(e=>{if(e.startsWith("[")&&(o.hasFilter||n>0)){const t=e.match(/\[(.*?)\s/)[1],s=e.match(/"(.*?)"/)[1];h[t]=s}else e.startsWith("1")&&(h.moves=e.replace(/\{(.*?)\}\s/g,"").replace(/\d+\.+\s/g,"").replace(" *","").split(" "),!o.filter(h)&&o.hasFilter||this.processGame(h),this.cntGames%r==0&&this.emit("status",this.cntGames),h={});this.cntGames>=o.cntGames&&(c.close(),c.removeAllListeners())})),await l().once(c,"close"),console.log("Read entire file."),this.gameAnalyzers.forEach((e=>{e.finish&&e.finish()})),this.moveAnalyzers.forEach((e=>{e.finish&&e.finish()})),{cntGames:this.cntGames,cntMoves:this.cntMoves}}catch(e){return console.error(e),{cntGames:-1,cntMoves:-1}}}processGame(e){const{moves:t}=e;for(let e=0;e<t.length;e+=1)this.activePlayer=e%2,this.parseMove(t[e]),this.moveAnalyzers.forEach((e=>{e.analyze(this.currentMove)})),this.board.move(this.currentMove);this.cntMoves+=t.length-1,this.cntGames+=1,this.board.reset(),this.gameAnalyzers.forEach((t=>{t.analyze(e)}))}reset(){this.board.reset(),this.activePlayer=0}parseMove(e){const t=e.substring(0,1),s=GameProcessor.preProcess(e);this.currentMove=new MoveData,this.currentMove.san=e,this.currentMove.player=0===this.activePlayer?"w":"b",null===t.match(/\d/)&&(t.toLowerCase()===t?this.pawnMove(s):"O"!==t?this.pieceMove(s):this.currentMove.castles=s)}pawnMove(e){const t=this.activePlayer%2*-2+1,s=[],i=[];let r=e,o=0;if(r.includes("x"))r=r.replace("x",""),i[0]=8-parseInt(r.substring(2,3),10),i[1]=m.indexOf(r.substring(1,2)),s[0]=i[0]+t,s[1]=m.indexOf(r.substring(0,1)),null===this.board.tiles[i[0]][i[1]]&&(o="w"===this.currentMove.player?1:-1),this.currentMove.takes.piece=this.board.tiles[i[0]+o][i[1]].name,this.currentMove.takes.pos=[i[0]+o,i[1]];else{const e=8-parseInt(r.substring(1,2),10),o=m.indexOf(r.substring(0,1));s[1]=o,i[0]=e,i[1]=o;for(let i=e+t;i<8&&i>=0;i+=t)if(null!==this.board.tiles[i][o]&&this.board.tiles[i][o].name.includes("P")){s[0]=i;break}}this.currentMove.to=i,this.currentMove.from=s,this.currentMove.piece=this.board.tiles[s[0]][s[1]].name,r.includes("=")&&(this.currentMove.promotesTo=r.substring(r.length-1,r.length))}pieceMove(e){let t=e,s=!1,i={from:[],to:[]};const r=t.substring(0,1);if(t=t.substring(1,t.length),t.includes("x")&&(s=!0,t=t.replace("x","")),4===t.length)i.from[0]=8-parseInt(t.substring(1,2),10),i.from[1]=m.indexOf(t.substring(0,1)),i.to[0]=8-parseInt(t.substring(3,4),10),i.to[1]=m.indexOf(t.substring(2,3));else if(3===t.length){const e=8-parseInt(t.substring(2,3),10),s=m.indexOf(t.substring(1,2));let o=-1,a=-1;m.indexOf(t.substring(0,1))>=0?a=m.indexOf(t.substring(0,1)):o=8-parseInt(t.substring(0,1),10),i=this.findPiece(e,s,o,a,r)}else{const e=8-parseInt(t.substring(1,2),10),s=m.indexOf(t.substring(0,1));i=this.findPiece(e,s,-1,-1,r)}this.currentMove.from=i.from,this.currentMove.to=i.to,this.currentMove.piece=this.board.tiles[i.from[0]][i.from[1]].name,s&&(this.currentMove.takes.piece=this.board.tiles[this.currentMove.to[0]][this.currentMove.to[1]].name,this.currentMove.takes.pos=this.currentMove.to)}findPiece(e,t,s,i,r){const o=this.currentMove.player,a=[],n=[],l={Q:{line:!0,diag:!0},R:{line:!0,diag:!1},B:{line:!1,diag:!0},N:{line:!1,diag:!1}};a[0]=-1,a[1]=-1,n[0]=e,n[1]=t;let c=Object.values(this.board.pieces.posMap[o][r]);if(c.length>1&&(c=c.filter((o=>{const a=!(-1!==s&&o[0]!==s||-1!==i&&o[1]!==i);return(l[r].line&&(o[0]===e||o[1]===t)||l[r].diag&&Math.abs(o[0]-e)===Math.abs(o[1]-t)||"N"===r&&(2===Math.abs(o[0]-e)&&1===Math.abs(o[1]-t)||1===Math.abs(o[0]-e)&&2===Math.abs(o[1]-t)))&&a}))),1===c.length)return{from:c[0],to:n};if(c.length>1){for(let s=0;s<c.length-1;s+=1){const i=c[s];let o=!1;if("N"!==r){const s=[e-i[0],t-i[1]],r=Math.max.apply(null,s.map(Math.abs)),a=[Math.sign(s[0]),Math.sign(s[1])];for(let e=1;e<r&&!o;e+=1)this.board.tiles[i[0]+e*a[0]][i[1]+e*a[1]]&&(o=!0)}if(!o&&!this.checkCheck(i,n))return{from:i,to:n}}return{from:c[c.length-1],to:n}}return console.log(`Error: no piece for move ${r} to (${e},${t}) found!`),console.log(this.cntGames),console.log(this.currentMove),this.board.printPosition(),{from:a,to:n}}checkCheck(e,t){const s=this.currentMove.player,i="w"===this.currentMove.player?"b":"w",r=this.board.pieces.posMap[s].K.Ke;let o=!1;if(r[0]===e[0]&&r[1]===e[1])return!1;const a=[];a[0]=e[0]-r[0],a[1]=e[1]-r[1];const n=[];if(0===a[0]||0===a[1])n[0]="Q",n[1]="R";else{if(Math.abs(a[0])!==Math.abs(a[1]))return!1;n[0]="Q",n[1]="B"}0!==a[0]&&(a[0]=Math.sign(a[0])),0!==a[1]&&(a[1]=Math.sign(a[1]));const l=this.board.tiles[e[0]][e[1]],c=this.board.tiles[t[0]][t[1]];this.board.tiles[e[0]][e[1]]=null,this.board.tiles[t[0]][t[1]]=l;let h=!1;for(let e=1;e<8&&!o&&!h;e+=1){const t=r[0]+e*a[0],s=r[1]+e*a[1];if(t>=0&&t<8&&s>=0&&s<8&&null!==this.board.tiles[t][s]){const e=this.board.tiles[t][s];(e.name.includes(n[0])||e.name.includes(n[1]))&&e.color===i?o=!0:h=!0}}return this.board.tiles[e[0]][e[1]]=l,this.board.tiles[t[0]][t[1]]=c,o}static algebraicToCoords(e){const t=[],s=e.split("");return t.push(8-s[1]),t.push(m.indexOf(s[0])),t}static coordsToAlgebraic(e){let t=m[e[1]];return t+=8-e[0],t}static preProcess(e){return e.replace(/#|\+|\?|!/g,"")}}const f=GameProcessor,b=["Pa","Pb","Pc","Pd","Pe","Pf","Pg","Ph"],w=["Ra","Nb","Bc","Qd","Ke","Bf","Ng","Rh"];class Chessalyzer{static async startBatch(e,t,i={},r={fun:()=>{},rate:250}){let o=t;Array.isArray(o)||(o=[t]);const a=new f;a.on("status",(e=>{r.fun(e)}));const n=s.performance.now(),l=await a.processPGN(e,i,o,r.rate),c=s.performance.now(),h=Math.round(c-n)/1e3,p=Math.round(l.cntMoves/h);return console.log(`${l.cntGames} games (${l.cntMoves} moves) processed in ${h}s (${p} moves/s)`),l}static async startBatchMultiCore(e,t,i={},r=8e3,o=1){let a=t;Array.isArray(a)||(a=[t]);const n=s.performance.now(),l=await f.processPGNMultiCore(e,i,a,r,o),c=s.performance.now(),h=Math.round(c-n)/1e3,p=Math.round(l.cntMoves/h);return console.log(`${l.cntGames} games (${l.cntMoves} moves) processed in ${h}s (${p} moves/s)`),l.mps=p,l}static saveData(e,t){(0,i.writeFile)(e,JSON.stringify(t),(e=>{e?console.error(e):console.log("File has been created.")}))}static loadData(e){const t=JSON.parse((0,i.readFileSync)(e,"utf8"));return console.log(`File '${e}' has been loaded.`),t}static generateHeatmap(e,t,s,i={}){let r,o;"string"==typeof t?(r=f.algebraicToCoords(t),o=t):(r=t,o=f.coordsToAlgebraic(t));const a={alg:o,coords:r,piece:Chessalyzer.getStartingPiece(r)},n=[];let l=0,c=1e6;for(let t=0;t<8;t+=1){const r=new Array(8);for(let o=0;o<8;o+=1){const n=[t,o],h={alg:f.coordsToAlgebraic(n),coords:n,piece:Chessalyzer.getStartingPiece(n)};r[o]=s(e,a,h,i),r[o]>l&&(l=r[o]),r[o]<c&&(c=r[o])}n.push(r)}return{map:n,min:c,max:l}}static generateComparisonHeatmap(e,t,s,i,r={}){const o=[];let a=0,n=1e5;const l=Chessalyzer.generateHeatmap(e,s,i,r),c=Chessalyzer.generateHeatmap(t,s,i,r);for(let e=0;e<8;e+=1){const t=new Array(8);for(let s=0;s<8;s+=1){const i=l.map[e][s],r=c.map[e][s];t[s]=0===i||0===r?0:100*(i>=r?i/r-1:-r/i+1),t[s]>a&&(a=t[s]),t[s]<n&&(n=t[s])}o.push(t)}return{map:o,min:n,max:a}}static printHeatmap(e,t,s){const i=[255,128,0],r=[255,255,255];for(let t=0;t<e.length;t+=1)for(let a=0;a<2;a+=1){for(let a=0;a<e[t].length;a+=1){const n=0===s?0:Math.sqrt(e[t][a]/s).toFixed(2),l=[Math.round(i[0]*n+(1-n)*r[0]),Math.round(i[1]*n+(1-n)*r[1]),Math.round(i[2]*n+(1-n)*r[2])];process.stdout.write(o().bgRgb(l[0],l[1],l[2])("    "))}process.stdout.write("\n")}}static getStartingPiece(e){let t="",s="";return 0===e[0]?(t="b",s=w[e[1]]):1===e[0]?(t="b",s=b[e[1]]):6===e[0]?(t="w",s=b[e[1]]):7===e[0]&&(t="w",s=w[e[1]]),{color:t,name:s}}}const g=class BaseTracker{constructor(e){if(this.type=e,this.cfg={profilingActive:!1},this.time=0,this.t0=0,void 0===this.track)throw new Error("Your analyzer must implement a track() method!");if(void 0===this.type)throw new Error("Your analyzer must specify a type!")}analyze(e){this.cfg.profilingActive&&(this.t0=s.performance.now()),this.track(e),this.cfg.profilingActive&&(this.time+=s.performance.now()-this.t0)}},v=["Pa","Pb","Pc","Pd","Pe","Pf","Pg","Ph"],O=["Ra","Nb","Bc","Qd","Ke","Bf","Ng","Rh"];const y=class PieceTrackerBase extends g{constructor(){super("move"),this.b={},this.w={},v.forEach((e=>{this.w[e]={},this.b[e]={}})),O.forEach((e=>{this.w[e]={},this.b[e]={}})),Object.keys(this.w).forEach((e=>{v.forEach((t=>{this.w[e][t]=0,this.b[e][t]=0})),O.forEach((t=>{this.w[e][t]=0,this.b[e][t]=0}))}))}add(e){this.time+=e.time,v.forEach((t=>{O.forEach((s=>{this.w[t][s]+=e.w[t][s],this.b[t][s]+=e.b[t][s]})),v.forEach((s=>{this.w[t][s]+=e.w[t][s],this.b[t][s]+=e.b[t][s]}))})),O.forEach((t=>{O.forEach((s=>{this.w[t][s]+=e.w[t][s],this.b[t][s]+=e.b[t][s]})),v.forEach((s=>{this.w[t][s]+=e.w[t][s],this.b[t][s]+=e.b[t][s]}))}))}track(e){const{player:t}=e,{piece:s}=e,{takes:i}=e;void 0!==i.piece&&s.length>1&&i.piece.length>1&&!s.match(/\d/g)&&!i.piece.match(/\d/g)&&this.processTakes(t,s,i.piece)}processTakes(e,t,s){this[e][t][s]+=1}},M=["Pa","Pb","Pc","Pd","Pe","Pf","Pg","Ph"],P=["Ra","Nb","Bc","Qd","Ke","Bf","Ng","Rh"];class TileStats{constructor(){this.movedTo=0,this.wasOn=0,this.killedOn=0,this.wasKilledOn=0}}class Piece{constructor(e,t){this.piece=e,this.color=t,this.lastMovedOn=0}}const k=class TileTrackerBase extends g{constructor(){super("move"),this.cntMovesGame=0,this.cntMovesTotal=0,this.tiles=new Array(8);for(let e=0;e<8;e+=1){const t=new Array(8);for(let e=0;e<8;e+=1)t[e]={b:{},w:{}},t[e].b=new TileStats,t[e].w=new TileStats,M.forEach((s=>{t[e].b[s]=new TileStats,t[e].w[s]=new TileStats})),P.forEach((s=>{t[e].b[s]=new TileStats,t[e].w[s]=new TileStats}));this.tiles[e]=t}for(let e=0;e<8;e+=1)for(let t=0;t<8;t+=1)this.resetCurrentPiece(e,t)}add(e){this.time+=e.time,this.cntMovesGame+=e.cntMovesGame,this.cntMovesTotal+=e.cntMovesTotal;for(let t=0;t<8;t+=1)for(let s=0;s<8;s+=1)this.tiles[t][s].b.movedTo+=e.tiles[t][s].b.movedTo,this.tiles[t][s].w.movedTo+=e.tiles[t][s].w.movedTo,this.tiles[t][s].b.wasOn+=e.tiles[t][s].b.wasOn,this.tiles[t][s].w.wasOn+=e.tiles[t][s].w.wasOn,this.tiles[t][s].b.killedOn+=e.tiles[t][s].b.killedOn,this.tiles[t][s].w.killedOn+=e.tiles[t][s].w.killedOn,this.tiles[t][s].b.wasKilledOn+=e.tiles[t][s].b.wasKilledOn,this.tiles[t][s].w.wasKilledOn+=e.tiles[t][s].w.wasKilledOn,M.forEach((i=>{this.tiles[t][s].b[i].movedTo+=e.tiles[t][s].b[i].movedTo,this.tiles[t][s].w[i].movedTo+=e.tiles[t][s].w[i].movedTo,this.tiles[t][s].b[i].wasOn+=e.tiles[t][s].b[i].wasOn,this.tiles[t][s].w[i].wasOn+=e.tiles[t][s].w[i].wasOn,this.tiles[t][s].b[i].killedOn+=e.tiles[t][s].b[i].killedOn,this.tiles[t][s].w[i].killedOn+=e.tiles[t][s].w[i].killedOn,this.tiles[t][s].b[i].wasKilledOn+=e.tiles[t][s].b[i].wasKilledOn,this.tiles[t][s].w[i].wasKilledOn+=e.tiles[t][s].w[i].wasKilledOn})),P.forEach((i=>{this.tiles[t][s].b[i].movedTo+=e.tiles[t][s].b[i].movedTo,this.tiles[t][s].w[i].movedTo+=e.tiles[t][s].w[i].movedTo,this.tiles[t][s].b[i].wasOn+=e.tiles[t][s].b[i].wasOn,this.tiles[t][s].w[i].wasOn+=e.tiles[t][s].w[i].wasOn,this.tiles[t][s].b[i].killedOn+=e.tiles[t][s].b[i].killedOn,this.tiles[t][s].w[i].killedOn+=e.tiles[t][s].w[i].killedOn,this.tiles[t][s].b[i].wasKilledOn+=e.tiles[t][s].b[i].wasKilledOn,this.tiles[t][s].w[i].wasKilledOn+=e.tiles[t][s].w[i].wasKilledOn}))}resetCurrentPiece(e,t){let s,i,r=!1;0===e?(s="b",i=P[t],r=!0):1===e?(s="b",i=M[t],r=!0):6===e?(s="w",i=M[t],r=!0):7===e&&(s="w",i=P[t],r=!0),this.tiles[e][t].currentPiece=r?new Piece(i,s):null}track(e){const{to:t}=e,{from:s}=e,{player:i}=e,{piece:r}=e,{takes:o}=e,{castles:a}=e;if(-1!==t[0])this.cntMovesGame+=1,void 0!==o.piece&&this.processTakes(o.pos,i,r,o.piece),this.processMove(s,t,i,r);else if(""!==a){this.cntMovesGame+=1;const e="w"===i?7:0;let t="Rh",s=6,r=5,o=7;"O-O-O"===a&&(s=2,r=3,o=0,t="Ra"),this.processMove([e,4],[e,s],i,"Ke"),this.processMove([e,o],[e,r],i,t)}else{for(let e=0;e<8;e+=1)for(let t=0;t<8;t+=1){const{currentPiece:s}=this.tiles[e][t];null!==s&&this.addOccupation([e,t]),this.resetCurrentPiece(e,t)}this.cntMovesTotal+=this.cntMovesGame,this.cntMovesGame=0}}processMove(e,t,s,i){i.length>1&&!i.match(/\d/g)&&(this.addOccupation(e),this.tiles[t[0]][t[1]].currentPiece=this.tiles[e[0]][e[1]].currentPiece,this.tiles[t[0]][t[1]].currentPiece.lastMovedOn=this.cntMovesGame,this.tiles[e[0]][e[1]].currentPiece=null,this.tiles[t[0]][t[1]][s].movedTo+=1,this.tiles[t[0]][t[1]][s][i].movedTo+=1)}processTakes(e,t,s,i){if(i.length>1&&!i.match(/\d/g)){const s="w"===t?"b":"w";this.tiles[e[0]][e[1]][s].wasKilledOn+=1,this.tiles[e[0]][e[1]][s][i].wasKilledOn+=1,this.addOccupation(e),this.tiles[e[0]][e[1]].currentPiece=null}s.length>1&&!s.match(/\d/g)&&(this.tiles[e[0]][e[1]][t].killedOn+=1,this.tiles[e[0]][e[1]][t][s].killedOn+=1)}addOccupation(e){const{currentPiece:t}=this.tiles[e[0]][e[1]],s=this.cntMovesGame-t.lastMovedOn;this.tiles[e[0]][e[1]][t.color].wasOn+=s,this.tiles[e[0]][e[1]][t.color][t.piece].wasOn+=s}};const T={Game:class GameTrackerBase extends g{constructor(){super("game"),this.wins=[0,0,0],this.cntGames=0,this.ECO={}}add(e){this.wins[0]+=e.wins[0],this.wins[1]+=e.wins[1],this.wins[2]+=e.wins[2],this.cntGames+=e.cntGames,this.time+=e.time,Object.keys(e.ECO).forEach((t=>{Object.prototype.hasOwnProperty.call(this.ECO,t)?this.ECO[t]+=e.ECO[t]:this.ECO[t]=e.ECO[t]}))}track(e){switch(this.cntGames+=1,e.Result){case"1-0":this.wins[0]+=1;break;case"1/2-1/2":this.wins[1]+=1;break;case"0-1":this.wins[2]+=1}Object.prototype.hasOwnProperty.call(this.ECO,e.ECO)?this.ECO[e.ECO]+=1:this.ECO[e.ECO]=1}finish(){this.ECO=Object.keys(this.ECO).sort().reduce(((e,t)=>(e[t]=this.ECO[t],e)),{})}},Piece:y,Tile:k,Base:g};return t})()}));